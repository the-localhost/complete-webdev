ES6 (few additions are listed)
```
~ for-of loop: iterates over only iterables (arrays, strings in JS)
	Code:	
			const list = ["color", "brush", "sheet"];
			for (item of list) {
				console.log(item);
			}
	Output:
			color
			brush
			sheet
-------------------------------------------------------------------
~ for-in loop: enumerates over object's properties (arrays are a type of object)
	Code:
			const quantities = {
				color: 5,
				brush: 2,
				sheet: 8
			}
			for (item in quantities) {
				console.log(item);
			}
	Output:
			color
			brush
			sheet
	Code:
			const list = ["color", "brush", "sheet"];
			for (item in list) {
				console.log(item);
			}
	Output:
			0
			1
			2
====================================================================
ES7
```
~ .includes:
	"Jonathon".includes("John") 				// true
	["Hello", "Hi", "Bye"].includes("Hey")		// false
-------------------------------------------------------------------
~ ** (raised to the power of)
	4**3		// 64
	2**10		// 1024

~ .padStart(), .padEnd()
	"Turtle".padStart(6)			// "      Turtle"
	"Turtle".padEnd(6)				// "Turtle      "
    -------------------------------------------------------------------
~ comma after list of parameters don't throw error
	function abc(param1, param2, param3,){
		...
	}